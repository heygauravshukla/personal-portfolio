---
import { Image } from 'astro:assets'
import { getCollection } from 'astro:content'

export interface Props {
  limit?: number
}

const { limit } = Astro.props

let projects = await getCollection('projects')

projects = projects.sort(
  (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf()
)

if (limit) {
  projects = projects.slice(0, limit)
}
---

<section class="section flow">
  <h2>Projects</h2>
  <ul class="auto-grid">
    {
      projects.map((project) => (
        <li>
          <a href={`/projects/${project.id}`} aria-hidden="true" tabindex="-1">
            <Image
              src={project.data.img}
              alt={
                project.data.img_alt ?? `Screenshot of ${project.data.title}`
              }
              width="362"
              height="265"
            />
          </a>
          <div>
            <h3>
              <a href={`/projects/${project.id}`}>{project.data.title}</a>
            </h3>
            <p>{project.data.description}</p>
          </div>
        </li>
      ))
    }
  </ul>
</section>

<style>
  section {
    padding-block: var(--size-fluid-5);
  }

  h2 {
    text-transform: uppercase;
    font-size: var(--font-size-fluid-2);
  }

  ul {
    list-style: none;
    padding: 0;
    margin-block-end: 0;
    gap: var(--size-fluid-2);
  }

  li {
    background-color: var(--surface-2);
    border: var(--border-size-1) solid var(--surface-3);
    border-radius: var(--radius-3);
    overflow: hidden;
  }

  img {
    width: 100%;
    height: auto;
    border-bottom: var(--border-size-1) solid var(--surface-3);
    transition: scale 0.2s ease-in-out;

    &:hover,
    &:focus-visible {
      scale: 1.05;
    }
  }

  div:has(h3) {
    padding: var(--size-3);
    display: grid;
    gap: var(--size-2);
  }

  h3 {
    font-size: var(--font-size-3);
  }

  p {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
    overflow: hidden;
  }
</style>
