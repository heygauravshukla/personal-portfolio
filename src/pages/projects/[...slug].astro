---
import { getCollection, render } from "astro:content";

import Layout from "../../layouts/Layout.astro";
import ArrowLeftIcon from "../../assets/icons/arrow-left-solid.svg";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project) => ({
    params: { slug: project.id },
    props: { project },
  }));
}

const { project } = Astro.props;
const { Content } = await render(project);
---

<Layout title={project.data.title} description={project.data.description}>
  <div class="wrapper">
    <button onclick="history.back()" title="Go back">
      <ArrowLeftIcon />
      <span class="visually-hidden">Go back</span>
    </button>

    <article class="flow">
      <header class="flow">
        <time datetime={new Date(project.data.publishDate).toISOString()}>
          {
            new Date(project.data.publishDate).toLocaleDateString("en-US", {
              year: "numeric",
              month: "long",
              day: "numeric",
            })
          }
        </time>
        <h1 class="font-size-xl">{project.data.title}</h1>
        <ul class="tags">
          {project.data.tags.map((tag) => <li>{tag}</li>)}
        </ul>
        <p>{project.data.description}</p>
        <img
          class="project-img"
          src={project.data.img}
          alt={project.data.img_alt ?? `Preview image of ${project.data.title}`}
          width="750"
          height="550"
        />
        <div class="button-group">
          {
            project.data.live_site_url && (
              <a
                class="button primary"
                href={project.data.live_site_url}
                target="_blank"
                rel="noopener noreferrer"
              >
                View Live Site
              </a>
            )
          }
          {
            project.data.source_code_url && (
              <a
                class="button"
                href={project.data.source_code_url}
                target="_blank"
                rel="noopener noreferrer"
              >
                Source Code
              </a>
            )
          }
        </div>
      </header>
      <main class="prose flow">
        <Content />
      </main>
    </article>
  </div>
</Layout>

<style>
  button[title="Go back"] {
    cursor: pointer;
    display: grid;
    place-items: center;

    width: 3rem;
    height: 3rem;
    background-color: transparent;
    border: 1px solid var(--clr-surface-3);
    border-radius: 100vh;
    margin-block-start: 4rem;

    transition: background-color 0.2s ease-in-out;

    &:hover {
      background-color: var(--clr-surface-2);
    }

    & > svg {
      fill: var(--clr-text-2);
    }
  }

  article {
    --_flow-space: 2rem;

    max-width: 70ch;
    margin-inline: auto;
    margin-block: 4rem;
  }

  header {
    --_flow-space: 1.5rem;
  }

  time {
    border-inline-start: 2px solid var(--clr-surface-4);
    padding-inline-start: 1rem;
  }

  .tags {
    list-style: none;
    padding: 0;
    margin-block-end: 0;

    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 0.875rem;
  }

  .tags li {
    text-transform: uppercase;
    font-size: var(--fs-100);
    font-weight: var(--fw-semi-bold);

    background-color: var(--clr-brand);
    color: var(--clr-surface-1);
    padding: 0.25rem 1rem;
    border-radius: 100vh;
  }

  .project-img {
    width: 100%;
    height: auto;
    border-radius: 8px;
  }

  .button-group {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 0.875rem;
  }

  .prose {
    --_flow-space: 1.5rem;
  }
</style>
