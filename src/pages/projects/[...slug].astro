---
import { getCollection, render } from "astro:content";

import Layout from "../../layouts/Layout.astro";
import ArrowLeftIcon from "../../assets/icons/arrow-left-solid.svg";
import ArrowUpRightFromSquareIcon from "../../assets/icons/arrow-up-right-from-square-solid.svg";
import GitHubIcon from "../../assets/icons/github-brands.svg";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project) => ({
    params: { slug: project.id },
    props: { project },
  }));
}

const { project } = Astro.props;
const { Content } = await render(project);
---

<Layout title={project.data.title} description={project.data.description}>
  <div class="wrapper @container space-y-8 py-16 md:py-24">
    <nav aria-label="Breadcrumb">
      <button
        onclick="history.back()"
        title="Go back"
        class="hover:bg-accent group rounded-full border p-3 transition-colors"
      >
        <ArrowLeftIcon
          class="fill-muted-foreground group-hover:fill-accent-foreground size-4 transition-colors"
        />
        <span class="sr-only">Go back</span>
      </button>
    </nav>

    <article class="mx-auto max-w-2xl space-y-4">
      <header class="space-y-6">
        <time
          datetime={new Date(project.data.publishDate).toISOString()}
          class="text-muted-foreground flex items-center gap-3"
        >
          <span
            class="bg-muted-foreground h-4 w-0.5 rounded-full"
            aria-hidden="true"></span>
          <span
            >{
              new Date(project.data.publishDate).toLocaleDateString("en-US", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })
            }</span
          >
        </time>
        <h1
          class="mb-4 text-4xl leading-[1.1] font-medium tracking-tighter @md:text-balance @xl:text-5xl"
        >
          {project.data.title}
        </h1>
        <ul class="flex flex-wrap items-center gap-3">
          {
            project.data.tags.map((tag) => (
              <li class="bg-primary text-primary-foreground rounded-full px-3 py-1 text-xs font-medium">
                {tag}
              </li>
            ))
          }
        </ul>
        <p class="text-muted-foreground text-base/7">
          {project.data.description}
        </p>
        <img
          src={project.data.img}
          alt={project.data.img_alt ?? `Preview image of ${project.data.title}`}
          width="750"
          height="550"
          class="w-full rounded-lg border"
        />
        <div class="flex flex-wrap items-center gap-3">
          {
            project.data.live_site_url && (
              <a
                href={project.data.live_site_url}
                target="_blank"
                rel="noopener noreferrer"
                class="btn btn-primary"
              >
                <ArrowUpRightFromSquareIcon /> View Live Site
              </a>
            )
          }
          {
            project.data.source_code_url && (
              <a
                href={project.data.source_code_url}
                target="_blank"
                rel="noopener noreferrer"
                class="btn btn-secondary"
              >
                <GitHubIcon /> Source Code
              </a>
            )
          }
        </div>
      </header>
      <main
        class="**:[a]:text-primary **:[code]:bg-accent **:[p,li]:text-accent-foreground **:[a]:underline **:[code]:rounded **:[code]:px-1 **:[code]:py-px **:[code]:text-sm **:[h1,h2,h3,h4]:border-b **:[h1,h2,h3,h4]:pb-2 **:[h1,h2,h3,h4]:font-medium **:[h2,h3]:mt-8 **:[h2,h3]:mb-4 **:[h2,h3]:text-xl **:[li]:pl-2 **:[p,li]:text-base/7 **:[ul]:list-disc **:[ul]:pl-8 **:[ul,p]:my-2"
      >
        <Content />
      </main>
    </article>
  </div>
</Layout>
